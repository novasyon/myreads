{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/ListBooks.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nvar ListBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListBooks, _Component);\n\n  function ListBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n    return _this;\n  }\n\n  _createClass(ListBooks, [{\n    key: \"render\",\n    value: function render() {\n      var onUpdateShelf = this.props.onUpdateShelf;\n      return React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, this.books.map(function (Books) {\n        return React.createElement(\"li\", {\n          key: Books.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: \"url(\".concat(Books.imageLinks.smallThumbnail, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"book-shelf-changer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          value: Books.shelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"move\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Move to...\"), React.createElement(\"option\", {\n          value: \"currentlyReading\",\n          onClick: function onClick() {\n            return onUpdateShelf(Books, 'currentlyReading');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Currently Reading\"), React.createElement(\"option\", {\n          value: \"wantToRead\",\n          onClick: function onClick() {\n            return onUpdateShelf(Books, 'wantToRead');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Want to Read\"), React.createElement(\"option\", {\n          value: \"read\",\n          onClick: function onClick() {\n            return onUpdateShelf(Books, 'read');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Read\"), React.createElement(\"option\", {\n          value: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"None\")))), React.createElement(\"div\", {\n          className: \"book-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, Books.title), React.createElement(\"div\", {\n          className: \"book-authors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, Books.authers)));\n      }));\n    }\n    /*\n    class ListBookss extends Component {\n    static propTypes = {\n    Bookss: PropTypes.array.isRequired,\n    onDeleteBooks: PropTypes.func.isRequired,\n    }\n    state = {\n    query: ''\n    }\n    updateQuery = (query) => {\n    this.setState(() => ({\n    query: query.trim()\n    }))\n    }\n    clearQuery = () => {\n    this.updateQuery('')\n    }\n    \n    \n    render() {\n    // console.log('Props', this.props)\n    const { query } = this.state\n    const { Bookss, onDeleteBooks } = this.props\n    \n    const showingBookss = query === ''\n    ? Bookss\n    : Bookss.filter((c) => (\n    c.name.toLowerCase().includes(query.toLowerCase())\n    ))\n    \n    return (\n    <div className='list-Bookss'>\n    <div className='list-Bookss-top'>\n    <input\n    className='search-Bookss'\n    type='text'\n    placeholder='Search Bookss'\n    value={query}\n    onChange={(event) => this.updateQuery(event.target.value)}\n    />\n    <Link\n    to='/create'\n    className='add-Books'\n    >Add Books</Link>\n    </div>\n    \n    {showingBookss.length !== Bookss.length && (\n    <div className='showing-Bookss'>\n    ll''\n    \n    \\\\\\\n    <li key={Books.id} className='Books-list-item'>\n    <div\n    className='Books-avatar'\n    style={{\n    backgroundImage: `url(${Books.avatarURL})`\n    }}\n    ></div>\n    <div className='Books-details'>\n    <p>{Books.name}</p>\n    <p>{Books.handle}</p>\n    </div>\n    <button\n    onClick={() => onDeleteBooks(Books)}\n    className='Books-remove'>\n    Remove\n    </button>\n    </li>\n    ))}\n    </ol>\n    </div>\n    )\n    }\n    }\n    */\n\n  }]);\n\n  return ListBooks;\n}(Component);\n\nListBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default ListBooks;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/ListBooks.js"],"names":["React","Component","PropTypes","Link","ListBooks","state","query","onUpdateShelf","props","books","map","Books","id","width","height","backgroundImage","imageLinks","smallThumbnail","shelf","title","authers","propTypes","array","isRequired","onDeleteContact","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,S;;;;;;;;;;;;;;;;;UAKJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;;;;;6BAGD;AAAA,UACCC,aADD,GACmB,KAAKC,KADxB,CACCD,aADD;AAGT,aACA;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKE,KAAL,CAAWC,GAAX,CAAe,UAACC,KAAD;AAAA,eACZ;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,MAAM,EAAE,GAAtB;AAA2BC,YAAAA,eAAe,gBAASJ,KAAK,CAACK,UAAN,CAAiBC,cAA1B;AAA1C,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,KAAK,EAAEN,KAAK,CAACO,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAQ,UAAA,KAAK,EAAC,kBAAd;AAAiC,UAAA,OAAO,EAAE;AAAA,mBAAMX,aAAa,CAACI,KAAD,EAAQ,kBAAR,CAAnB;AAAA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,EAGE;AAAQ,UAAA,KAAK,EAAC,YAAd;AAA2B,UAAA,OAAO,EAAE;AAAA,mBAAMJ,aAAa,CAACI,KAAD,EAAQ,YAAR,CAAnB;AAAA,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,OAAO,EAAE;AAAA,mBAAMJ,aAAa,CAACI,KAAD,EAAQ,MAAR,CAAnB;AAAA,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF,CAFF,CADF,EAaE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BA,KAAK,CAACQ,KAAnC,CAbF,EAcE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BR,KAAK,CAACS,OAArC,CAdF,CADF,CADY;AAAA,OAAf,CADD,CADA;AA2BC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAxCwBnB,S;;AAAlBG,S,CACGiB,S,GAAY;AACjBZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,KAAV,CAAgBC,UADN;AAEjBC,EAAAA,eAAe,EAAEtB,SAAS,CAACuB,IAAV,CAAeF;AAFf,C;AAmHrB,eAAenB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nclass ListBooks extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  }\n  state = {\n    query: ''\n  }\nrender() {\n  const { onUpdateShelf } = this.props\n \nreturn(\n<ol className='books-grid'>\n{this.books.map((Books) => (\n    <li key={Books.id}>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${Books.imageLinks.smallThumbnail})` }}></div>\n          <div className=\"book-shelf-changer\">\n            <select value={Books.shelf}>\n              <option value=\"move\" disabled>Move to...</option>\n              <option value=\"currentlyReading\" onClick={() => onUpdateShelf(Books, 'currentlyReading')}>Currently Reading</option>\n              <option value=\"wantToRead\" onClick={() => onUpdateShelf(Books, 'wantToRead')}>Want to Read</option>\n              <option value=\"read\" onClick={() => onUpdateShelf(Books, 'read')}>Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{Books.title}</div>\n        <div className=\"book-authors\">{Books.authers}</div>\n      </div>\n    </li>\n\n\n))}\n</ol>\n\n)\n}\n\n/*\nclass ListBookss extends Component {\nstatic propTypes = {\nBookss: PropTypes.array.isRequired,\nonDeleteBooks: PropTypes.func.isRequired,\n}\nstate = {\nquery: ''\n}\nupdateQuery = (query) => {\nthis.setState(() => ({\nquery: query.trim()\n}))\n}\nclearQuery = () => {\nthis.updateQuery('')\n}\n\n\nrender() {\n// console.log('Props', this.props)\nconst { query } = this.state\nconst { Bookss, onDeleteBooks } = this.props\n\nconst showingBookss = query === ''\n? Bookss\n: Bookss.filter((c) => (\nc.name.toLowerCase().includes(query.toLowerCase())\n))\n\nreturn (\n<div className='list-Bookss'>\n<div className='list-Bookss-top'>\n<input\nclassName='search-Bookss'\ntype='text'\nplaceholder='Search Bookss'\nvalue={query}\nonChange={(event) => this.updateQuery(event.target.value)}\n/>\n<Link\nto='/create'\nclassName='add-Books'\n>Add Books</Link>\n</div>\n\n{showingBookss.length !== Bookss.length && (\n<div className='showing-Bookss'>\nll''\n\n\\\\\\\n<li key={Books.id} className='Books-list-item'>\n<div\nclassName='Books-avatar'\nstyle={{\nbackgroundImage: `url(${Books.avatarURL})`\n}}\n></div>\n<div className='Books-details'>\n<p>{Books.name}</p>\n<p>{Books.handle}</p>\n</div>\n<button\nonClick={() => onDeleteBooks(Books)}\nclassName='Books-remove'>\nRemove\n</button>\n</li>\n))}\n</ol>\n</div>\n)\n}\n}\n*/\n}\nexport default ListBooks"]},"metadata":{},"sourceType":"module"}