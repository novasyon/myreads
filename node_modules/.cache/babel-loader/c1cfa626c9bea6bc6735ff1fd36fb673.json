{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/App.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Route } from 'react-router-dom';\nimport ListBooks from './ListBooks'; //import ListBkResults from './ListBkResults'\n\nimport './App.css';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksApp, _Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      query: '',\n      showSearchPage: false,\n      books: [],\n      bkResults: [],\n      showingBooks: [],\n      currentlyReading: [],\n      read: [],\n      wantToRead: []\n    };\n\n    _this.searchBook = function (query) {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState(function (books) {\n          return {};\n        });\n      });\n    };\n\n    _this.updateBook = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (books) {\n        _this.setState(function (currentState) {\n          return {\n            books: currentState.books.concat([books])\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books,\n            currentlyReading: books.filter(function (books) {\n              return books.shelf === 'currentlyReading';\n            }),\n            read: books.filter(function (books) {\n              return books.shelf === 'read';\n            }),\n            wantToRead: books.filter(function (books) {\n              return books.shelf === 'wantToRead';\n            })\n          };\n        });\n      });\n    } // updateBookShelf = (book, shelf) => {\n    //   BooksAPI.update(book, shelf).then((data) => {\n    //     console.log(data);\n    //   });\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          currentlyReading = _this$state.currentlyReading,\n          wantToRead = _this$state.wantToRead,\n          read = _this$state.read; // const { query, showingBooks , wantToRead, currentlyReading, read, Books}  = this.state;\n\n      var _this$props = this.props,\n          bkResults = _this$props.bkResults,\n          onAddBook = _this$props.onAddBook,\n          updateBook = _this$props.updateBook;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: currentlyReading,\n            onUpdateShelf: _this3.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: wantToRead,\n            onUpdateShelf: _this3.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            onUpdateShelf: _this3.updateBook,\n            books: read,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Other\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            onUpdateShelf: _this3.updateBook,\n            books: books.filter(function (c) {\n              return c.shelf === \"none\";\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Add a book\")));\n    }\n  }]);\n\n  return BooksApp;\n}(Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/App.js"],"names":["React","Component","BooksAPI","Route","ListBooks","BooksApp","state","query","showSearchPage","books","bkResults","showingBooks","currentlyReading","read","wantToRead","searchBook","getAll","then","setState","updateBook","book","shelf","update","currentState","concat","filter","props","onAddBook","c"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route } from 'react-router-dom'\nimport ListBooks from './ListBooks'\n//import ListBkResults from './ListBkResults'\nimport './App.css'\n\nclass BooksApp extends Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    query: '',\n    showSearchPage: false,\n    books: [],\n    bkResults: [],\n    showingBooks: [],\n    currentlyReading: [],\n    read: [],\n    wantToRead: [],\n  }\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books,\n           currentlyReading: books.filter(books => books.shelf === 'currentlyReading'),\n           read: books.filter(books => books.shelf === 'read'),\n           wantToRead: books.filter(books => books.shelf === 'wantToRead'),\n        }))\n      })\n  }\n  // updateBookShelf = (book, shelf) => {\n  //   BooksAPI.update(book, shelf).then((data) => {\n  //     console.log(data);\n  //   });\n  // }\n\n\n  searchBook = (query) => {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState((books) => ({\n\n        }))\n      })\n  }\n\n  updateBook = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n      .then((books) => {\n        this.setState((currentState) => ({\n          books: currentState.books.concat([books])\n        }))\n      })\n  }\n\n  render() {\n    const { currentlyReading, wantToRead, read } = this.state;\n    // const { query, showingBooks , wantToRead, currentlyReading, read, Books}  = this.state;\n\n     const { bkResults, onAddBook, updateBook } = this.props\n\n    return (\n      <div className=\"app\">\n        {/*  <Route exact path='/' render={() => (\n          <ListBooks\n            books={this.state.books}\n            onChangeShelf={this.changeShelf}\n          />\n        )} /> */}\n\n        {/*  <Route exact path='/search' render={() => (\n          <ListBkResults\n            books={this.state.books}\n            onChangeShelf={this.changeShelf}\n          />\n        )} />\n */}\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <div className=\"list-books-content\">\n            <div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                {//JSON.stringify(currentlyReading)\n                }\n                <div className=\"bookshelf-books\">\n                  <Route exact path='/' render={() => (\n                    <ListBooks\n                      books={currentlyReading}\n                      onUpdateShelf={this.updateBook}\n                    />\n                  )} />\n                </div>\n              </div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Want to Read</h2>\n                <div className=\"bookshelf-books\">\n                  <Route exact path='/' render={() => (\n                    <ListBooks\n\n                      books={wantToRead}\n                      onUpdateShelf={this.updateBook}\n\n                    />\n                  )} />\n                </div>\n              </div>\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Read</h2>\n                <div className=\"bookshelf-books\">\n                  <Route exact path='/' render={() => (\n                    <ListBooks\n                      onUpdateShelf={this.updateBook}\n                      books={read}\n                    />\n                  )} />\n                </div>\n              </div>\n\n              <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">Other</h2>\n                <div className=\"bookshelf-books\">\n                  <Route exact path='/' render={() => (\n                    <ListBooks\n                      onUpdateShelf={this.updateBook}\n                      books={books.filter(((c) => {\n                        return c.shelf === \"none\"\n                      }))}\n\n                    />\n                  )}\n                  />\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"open-search\">\n          <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}