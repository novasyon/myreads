{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/ListBooks.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ShowBook from './ShowBook';\nimport { Link, Route } from 'react-router-dom';\n\nvar ListBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListBooks, _Component);\n\n  function ListBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query.trim()\n        };\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery('');\n    };\n\n    return _this;\n  }\n\n  _createClass(ListBooks, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var query = this.state.query;\n      var _this$props = this.props,\n          books = _this$props.books,\n          onUpdateShelf = _this$props.onUpdateShelf;\n      var showingBooks = query === '' ? books : books.filter(function (b) {\n        return b.title.toLowerCase().includes(query.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ShowBook, {\n            books: books.filter(function (books) {\n              return books.shelf === 'currentlyReading';\n            }),\n            onUpdateShelf: _this2.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ShowBook, {\n            books: books.filter(function (books) {\n              return books.shelf === 'wantToRead';\n            }),\n            onUpdateShelf: _this2.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ShowBook, {\n            onUpdateShelf: _this2.updateBook,\n            books: books.filter(function (books) {\n              return books.shelf === 'read';\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Other\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            onUpdateShelf: _this2.updateBook,\n            books: books.filter(function (c) {\n              return c.shelf === \"none\";\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ListBooks;\n}(Component);\n\nListBooks.propTypes = {\n  books: PropTypes.array,\n  onUpdateShelf: PropTypes.func\n};\nexport default ListBooks;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/ListBooks.js"],"names":["React","Component","PropTypes","ShowBook","Link","Route","ListBooks","state","query","updateQuery","setState","trim","clearQuery","props","books","onUpdateShelf","showingBooks","filter","b","title","toLowerCase","includes","shelf","updateBook","c","propTypes","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ShowBook from './ShowBook'\nimport { Link, Route } from 'react-router-dom'\n\nclass ListBooks extends Component {\n  static propTypes = {\n    books: PropTypes.array,\n    onUpdateShelf: PropTypes.func,\n  }\n  state = {\n    query: ''\n  }\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query.trim()\n    }))\n  }\n  clearQuery = () => {\n    this.updateQuery('')\n  }\n\n\n  render() {\n    const { query } = this.state\n    const { books, onUpdateShelf } = this.props\n\n    const showingBooks = query === ''\n      ? books\n      : books.filter((b) => (\n        b.title.toLowerCase().includes(query.toLowerCase())\n      ))\n\n    return (\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <div className=\"list-books-content\">\n          <div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\n              <div className=\"bookshelf-books\">\n                <Route exact path='/' render={() => (\n                  <ShowBook\n                    books={books.filter(books => books.shelf === 'currentlyReading')}\n                    onUpdateShelf={this.updateBook}\n                  />\n                )} />\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\n              <div className=\"bookshelf-books\">\n                <Route exact path='/' render={() => (\n                  <ShowBook\n\n                    books={books.filter(books => books.shelf === 'wantToRead')}\n                    onUpdateShelf={this.updateBook}\n\n                  />\n                )} />\n              </div>\n            </div>\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Read</h2>\n              <div className=\"bookshelf-books\">\n                <Route exact path='/' render={() => (\n                  <ShowBook\n                    onUpdateShelf={this.updateBook}\n                    books={books.filter(books => books.shelf === 'read')}\n                  />\n                )} />\n              </div>\n            </div>\n\n            <div className=\"bookshelf\">\n              <h2 className=\"bookshelf-title\">Other</h2>\n              <div className=\"bookshelf-books\">\n                <Route exact path='/' render={() => (\n                  <ListBooks\n                    onUpdateShelf={this.updateBook}\n                    books={books.filter(((c) => {\n                      return c.shelf === \"none\"\n                    }))}\n\n                  />\n                )}\n                />\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default ListBooks"]},"metadata":{},"sourceType":"module"}