{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/ListBooks.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nvar ListBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListBooks, _Component);\n\n  function ListBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query.trim()\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ListBooks, [{\n    key: \"render\",\n    value: function render() {\n      var onUpdateShelf = this.props.onUpdateShelf;\n      return React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.books.map(function (books) {\n        return React.createElement(\"li\", {\n          key: books.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-top\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"book-cover\",\n          style: {\n            width: 128,\n            height: 193,\n            backgroundImage: \"url(\".concat(books.imageLinks.smallThumbnail, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"book-shelf-changer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          value: books.shelf,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"move\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Move to...\"), React.createElement(\"option\", {\n          value: \"currentlyReading\",\n          onClick: function onClick() {\n            return onUpdateShelf(books, 'currentlyReading');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Currently Reading\"), React.createElement(\"option\", {\n          value: \"wantToRead\",\n          onClick: function onClick() {\n            return onUpdateShelf(books, 'wantToRead');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Want to Read\"), React.createElement(\"option\", {\n          value: \"read\",\n          onClick: function onClick() {\n            return onUpdateShelf(books, 'read');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Read\"), React.createElement(\"option\", {\n          value: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"None\")))), React.createElement(\"div\", {\n          className: \"book-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, books.title), React.createElement(\"div\", {\n          className: \"book-authors\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, books.authers)));\n      }));\n    }\n    /*\n    class ListBookss extends Component {\n    static propTypes = {\n    Bookss: PropTypes.array.isRequired,\n    onDeleteBooks: PropTypes.func.isRequired,\n    }\n    state = {\n    query: ''\n    }\n    updateQuery = (query) => {\n    this.setState(() => ({\n    query: query.trim()\n    }))\n    }\n    clearQuery = () => {\n    this.updateQuery('')\n    }\n    \n    \n    render() {\n    // console.log('Props', this.props)\n    const { query } = this.state\n    const { Bookss, onDeleteBooks } = this.props\n    \n    const showingBookss = query === ''\n    ? Bookss\n    : Bookss.filter((c) => (\n    c.name.toLowerCase().includes(query.toLowerCase())\n    ))\n    \n    return (\n    <div className='list-Bookss'>\n    <div className='list-Bookss-top'>\n    <input\n    className='search-Bookss'\n    type='text'\n    placeholder='Search Bookss'\n    value={query}\n    onChange={(event) => this.updateQuery(event.target.value)}\n    />\n    <Link\n    to='/create'\n    className='add-Books'\n    >Add Books</Link>\n    </div>\n    \n    {showingBookss.length !== Bookss.length && (\n    <div className='showing-Bookss'>\n    ll''\n    \n    \\\\\\\n    <li key={Books.id} className='Books-list-item'>\n    <div\n    className='Books-avatar'\n    style={{\n    backgroundImage: `url(${Books.avatarURL})`\n    }}\n    ></div>\n    <div className='Books-details'>\n    <p>{Books.name}</p>\n    <p>{Books.handle}</p>\n    </div>\n    <button\n    onClick={() => onDeleteBooks(Books)}\n    className='Books-remove'>\n    Remove\n    </button>\n    </li>\n    ))}\n    </ol>\n    </div>\n    )\n    }\n    }\n    */\n\n  }]);\n\n  return ListBooks;\n}(Component);\n\nListBooks.propTypes = {\n  books: PropTypes.array.isRequired,\n  onUpdateShelf: PropTypes.func.isRequired\n};\nexport default ListBooks;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/ListBooks.js"],"names":["React","Component","PropTypes","Link","ListBooks","state","query","updateQuery","setState","trim","onUpdateShelf","props","books","map","id","width","height","backgroundImage","imageLinks","smallThumbnail","shelf","title","authers","propTypes","array","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,S;;;;;;;;;;;;;;;;;UAKJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,W,GAAc,UAACD,KAAD,EAAW;AACvB,YAAKE,QAAL,CAAc;AAAA,eAAO;AACnBF,UAAAA,KAAK,EAAEA,KAAK,CAACG,IAAN;AADY,SAAP;AAAA,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,UACCC,aADD,GACmB,KAAKC,KADxB,CACCD,aADD;AAGP,aACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKE,KAAL,CAAWC,GAAX,CAAe,UAACD,KAAD;AAAA,eACd;AAAI,UAAA,GAAG,EAAEA,KAAK,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,GAAT;AAAcC,YAAAA,MAAM,EAAE,GAAtB;AAA2BC,YAAAA,eAAe,gBAASL,KAAK,CAACM,UAAN,CAAiBC,cAA1B;AAA1C,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,KAAK,EAAEP,KAAK,CAACQ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAQ,UAAA,KAAK,EAAC,kBAAd;AAAiC,UAAA,OAAO,EAAE;AAAA,mBAAMV,aAAa,CAACE,KAAD,EAAQ,kBAAR,CAAnB;AAAA,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,EAGE;AAAQ,UAAA,KAAK,EAAC,YAAd;AAA2B,UAAA,OAAO,EAAE;AAAA,mBAAMF,aAAa,CAACE,KAAD,EAAQ,YAAR,CAAnB;AAAA,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,EAIE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAqB,UAAA,OAAO,EAAE;AAAA,mBAAMF,aAAa,CAACE,KAAD,EAAQ,MAAR,CAAnB;AAAA,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF,CAFF,CADF,EAaE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BA,KAAK,CAACS,KAAnC,CAbF,EAcE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BT,KAAK,CAACU,OAArC,CAdF,CADF,CADc;AAAA,OAAf,CADH,CADF;AA2BD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA/CsBrB,S;;AAAlBG,S,CACGmB,S,GAAY;AACjBX,EAAAA,KAAK,EAAEV,SAAS,CAACsB,KAAV,CAAgBC,UADN;AAEjBf,EAAAA,aAAa,EAAER,SAAS,CAACwB,IAAV,CAAeD;AAFb,C;AA0HrB,eAAerB,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nclass ListBooks extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    onUpdateShelf: PropTypes.func.isRequired,\n  }\n  state = {\n    query: ''\n  }\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query.trim()\n    }))\n  }\n\n  render() {\n    const { onUpdateShelf } = this.props\n\n    return (\n      <ol className='books-grid'>\n        {this.books.map((books) => (\n          <li key={books.id}>\n            <div className=\"book\">\n              <div className=\"book-top\">\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${books.imageLinks.smallThumbnail})` }}></div>\n                <div className=\"book-shelf-changer\">\n                  <select value={books.shelf}>\n                    <option value=\"move\" disabled>Move to...</option>\n                    <option value=\"currentlyReading\" onClick={() => onUpdateShelf(books, 'currentlyReading')}>Currently Reading</option>\n                    <option value=\"wantToRead\" onClick={() => onUpdateShelf(books, 'wantToRead')}>Want to Read</option>\n                    <option value=\"read\" onClick={() => onUpdateShelf(books, 'read')}>Read</option>\n                    <option value=\"none\">None</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"book-title\">{books.title}</div>\n              <div className=\"book-authors\">{books.authers}</div>\n            </div>\n          </li>\n\n\n        ))}\n      </ol>\n\n    )\n  }\n\n  /*\n  class ListBookss extends Component {\n  static propTypes = {\n  Bookss: PropTypes.array.isRequired,\n  onDeleteBooks: PropTypes.func.isRequired,\n  }\n  state = {\n  query: ''\n  }\n  updateQuery = (query) => {\n  this.setState(() => ({\n  query: query.trim()\n  }))\n  }\n  clearQuery = () => {\n  this.updateQuery('')\n  }\n  \n  \n  render() {\n  // console.log('Props', this.props)\n  const { query } = this.state\n  const { Bookss, onDeleteBooks } = this.props\n  \n  const showingBookss = query === ''\n  ? Bookss\n  : Bookss.filter((c) => (\n  c.name.toLowerCase().includes(query.toLowerCase())\n  ))\n  \n  return (\n  <div className='list-Bookss'>\n  <div className='list-Bookss-top'>\n  <input\n  className='search-Bookss'\n  type='text'\n  placeholder='Search Bookss'\n  value={query}\n  onChange={(event) => this.updateQuery(event.target.value)}\n  />\n  <Link\n  to='/create'\n  className='add-Books'\n  >Add Books</Link>\n  </div>\n  \n  {showingBookss.length !== Bookss.length && (\n  <div className='showing-Bookss'>\n  ll''\n  \n  \\\\\\\n  <li key={Books.id} className='Books-list-item'>\n  <div\n  className='Books-avatar'\n  style={{\n  backgroundImage: `url(${Books.avatarURL})`\n  }}\n  ></div>\n  <div className='Books-details'>\n  <p>{Books.name}</p>\n  <p>{Books.handle}</p>\n  </div>\n  <button\n  onClick={() => onDeleteBooks(Books)}\n  className='Books-remove'>\n  Remove\n  </button>\n  </li>\n  ))}\n  </ol>\n  </div>\n  )\n  }\n  }\n  */\n}\nexport default ListBooks"]},"metadata":{},"sourceType":"module"}