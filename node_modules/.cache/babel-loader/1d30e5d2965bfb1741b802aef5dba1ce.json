{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/App.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport BookTable from './BookTable';\nimport SearchBar from './SearchBar';\nimport { Route, Link } from 'react-router-dom';\nimport './App.css';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksApp, _Component);\n\n  function BooksApp(props) {\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BooksApp).call(this, props));\n\n    _this.searchBook = function (query) {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState(function (books) {\n          return {};\n        });\n      });\n    };\n\n    _this.updateBook = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (books) {\n        _this.setState(function (currentState) {\n          return {\n            books: currentState.books.concat([books])\n          };\n        });\n      }).then(_this.componentDidMount(BooksAPI.getAll()));\n    };\n\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      query: '',\n      showSearchPage: false,\n      books: [],\n      bkResults: [],\n      showingBooks: [],\n      currentlyReading: [],\n      read: [],\n      wantToRead: []\n    };\n    _this.handleFilterTextChange = _this.handleFilterTextChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books,\n            currentlyReading: books.filter(function (books) {\n              return books.shelf === 'currentlyReading';\n            }),\n            read: books.filter(function (books) {\n              return books.shelf === 'read';\n            }),\n            wantToRead: books.filter(function (books) {\n              return books.shelf === 'wantToRead';\n            })\n          };\n        });\n      });\n    } // updateBookShelf = (book, shelf) => {\n    //   BooksAPI.update(book, shelf).then((data) => {\n    //     console.log(data);\n    //   });\n    // }\n\n  }, {\n    key: \"handleFilterTextChange\",\n    value: function handleFilterTextChange(filterText) {\n      this.setState({\n        filterText: filterText\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var books = this.state.books;\n      var currentlyReading = this.state.currentlyReading;\n      var read = this.state.read;\n      var wantToRead = this.state.wantToRead;\n      var changeShelf = this.updateBook;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(SearchBar, {\n            onChangeShelf: changeShelf,\n            books: books,\n            filterText: _this3.state.filterText,\n            onFilterTextChange: _this3.handleFilterTextChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(BookTable, {\n            currentlyReading: currentlyReading,\n            read: read,\n            wantToRead: wantToRead,\n            onChangeShelf: changeShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Link\", React.createElement(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Add a Book\")));\n    }\n  }]);\n\n  return BooksApp;\n}(Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/App.js"],"names":["React","Component","BooksAPI","BookTable","SearchBar","Route","Link","BooksApp","props","searchBook","query","getAll","then","books","setState","updateBook","book","shelf","update","currentState","concat","componentDidMount","state","showSearchPage","bkResults","showingBooks","currentlyReading","read","wantToRead","handleFilterTextChange","bind","filter","filterText","changeShelf"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport BookTable from './BookTable'\nimport SearchBar from './SearchBar'\nimport { Route, Link } from 'react-router-dom'\nimport './App.css'\n\nclass BooksApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      query: '',\n      showSearchPage: false,\n      books: [],\n      bkResults: [],\n      showingBooks: [],\n      currentlyReading: [],\n      read: [],\n      wantToRead: [],\n    }\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n  }\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books,\n          currentlyReading: books.filter(books => books.shelf === 'currentlyReading'),\n          read: books.filter(books => books.shelf === 'read'),\n          wantToRead: books.filter(books => books.shelf === 'wantToRead'),\n        }))\n      })\n  }\n  // updateBookShelf = (book, shelf) => {\n  //   BooksAPI.update(book, shelf).then((data) => {\n  //     console.log(data);\n  //   });\n  // }\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n\n  searchBook = (query) => {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState((books) => ({\n\n        }))\n      })\n  }\n\n  updateBook = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n      .then((books) => {\n        this.setState((currentState) => ({\n          books: currentState.books.concat([books])\n        }))\n      })\n      .then(this.componentDidMount(\n        BooksAPI.getAll()\n      ))\n  }\n\n  render() {\n    const books = this.state.books\n    const currentlyReading = this.state.currentlyReading\n    const read = this.state.read\n    const wantToRead = this.state.wantToRead\n    const changeShelf = this.updateBook\n    return (\n      <div className=\"app\">\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <Route exact path='/search' render={() => (\n            <SearchBar\n              onChangeShelf={changeShelf}\n              books={books}\n              filterText={this.state.filterText}\n              onFilterTextChange={this.handleFilterTextChange}\n            />\n          )} />\n          <Route exact path='/' render={() => (\n            <BookTable\n              currentlyReading={currentlyReading}\n              read={read}\n              wantToRead={wantToRead}\n              onChangeShelf={changeShelf}\n            />\n          )} />\n        </div>\n        \n\n        <div className=\"open-search\">Link\n        <Link to='/' className='close-search'>Add a Book</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}