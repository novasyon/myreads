{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/ListBkResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nvar ListBkResults =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListBkResults, _Component);\n\n  function ListBkResults() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListBkResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListBkResults)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query.trim()\n        };\n      });\n    };\n\n    _this.clearQuery = function () {\n      _this.updateQuery('');\n    };\n\n    return _this;\n  }\n\n  _createClass(ListBkResults, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var query = this.state.query;\n      var _this$props = this.props,\n          bkResults = _this$props.bkResults,\n          onUpdateShelf = _this$props.onUpdateShelf;\n      var showingBooks = query === '' ? bkResults : bkResults.filter(function (b) {\n        return b.title.toLowerCase().includes(query.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.searchBook(event.target.value);\n        },\n        books: this.searchBook(query),\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Results for [\", this.state.query, \"]: \", this.state.books.length, \" books.\"), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBkResults, {\n            bkResults: _this2.state.books,\n            onUpdateShelf: _this2.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })))\n      /*\n            <ol className='books-grid'>\n              {this.props.bkResults.map((Books) => (\n                <li key={Books.id}>\n                  <div className=\"book\">\n                    <div className=\"book-top\">\n                      <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${Books.imageLinks.smallThumbnail})` }}></div>\n                      <div className=\"book-shelf-changer\">\n                        <select value={Books.shelf} onChange={(event) => onUpdateShelf(Books, event.target.value)}>\n                          <option value=\"move\" disabled>Move to...</option>\n                          <option value=\"currentlyReading\" onClick={() => onUpdateShelf(Books, 'currentlyReading')}>Currently Reading</option>\n                          <option value=\"wantToRead\" onClick={() => onUpdateShelf(Books, 'wantToRead')}>Want to Read</option>\n                          <option value=\"read\" onClick={() => onUpdateShelf(Books, 'read')}>Read</option>\n                          <option value=\"none\">None</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"book-title\">{Books.title}</div>\n                    <div className=\"book-authors\">{Books.authers}</div>\n                  </div>\n                </li>\n              ))}\n            </ol>*/\n      ;\n    }\n  }]);\n\n  return ListBkResults;\n}(Component);\n\nListBkResults.propTypes = {\n  bkResults: PropTypes.array.isRequired,\n  onUpdateShelf: PropTypes.func\n};\nexport default ListBkResults;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/ListBkResults.js"],"names":["React","Component","PropTypes","Link","ListBkResults","state","query","updateQuery","setState","trim","clearQuery","props","bkResults","onUpdateShelf","showingBooks","filter","b","title","toLowerCase","includes","showSearchPage","event","searchBook","target","value","books","length","updateBook","propTypes","array","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,a;;;;;;;;;;;;;;;;;UAKJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,W,GAAc,UAACD,KAAD,EAAW;AACvB,YAAKE,QAAL,CAAc;AAAA,eAAO;AACnBF,UAAAA,KAAK,EAAEA,KAAK,CAACG,IAAN;AADY,SAAP;AAAA,OAAd;AAGD,K;;UACDC,U,GAAa,YAAM;AACjB,YAAKH,WAAL,CAAiB,EAAjB;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,UACCD,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAAA,wBAE8B,KAAKK,KAFnC;AAAA,UAECC,SAFD,eAECA,SAFD;AAAA,UAEYC,aAFZ,eAEYA,aAFZ;AAIP,UAAMC,YAAY,GAAGR,KAAK,KAAK,EAAV,GACjBM,SADiB,GAEjBA,SAAS,CAACG,MAAV,CAAiB,UAACC,CAAD;AAAA,eACjBA,CAAC,CAACC,KAAF,CAAQC,WAAR,GAAsBC,QAAtB,CAA+Bb,KAAK,CAACY,WAAN,EAA/B,CADiB;AAAA,OAAjB,CAFJ;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACV,QAAL,CAAc;AAAEY,YAAAA,cAAc,EAAE;AAAlB,WAAd,CAAN;AAAA,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAO,QAAA,WAAW,EAAC,2BAAnB;AACE,QAAA,KAAK,EAAEd,KADT;AAEE,QAAA,QAAQ,EAAE,kBAACe,KAAD;AAAA,iBAAW,MAAI,CAACC,UAAL,CAAgBD,KAAK,CAACE,MAAN,CAAaC,KAA7B,CAAX;AAAA,SAFZ;AAIE,QAAA,KAAK,EAAE,KAAKF,UAAL,CAAgBhB,KAAhB,CAJT;AAKE,QAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAFF,CADN,EAqBM;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,KAAKD,KAAL,CAAWC,KAA/B,SAAyC,KAAKD,KAAL,CAAWoB,KAAX,CAAiBC,MAA1D,YADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE;AAAA,iBAC5B,oBAAC,aAAD;AACE,YAAA,SAAS,EAAE,MAAI,CAACrB,KAAL,CAAWoB,KADxB;AAEE,YAAA,aAAa,EAAE,MAAI,CAACE,UAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAD4B;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CArBN;AAiCN;;;;;;;;;;;;;;;;;;;;;;;AAlCI;AA0DD;;;;EAtFyB1B,S;;AAAtBG,a,CACGwB,S,GAAY;AACjBhB,EAAAA,SAAS,EAAEV,SAAS,CAAC2B,KAAV,CAAgBC,UADV;AAEjBjB,EAAAA,aAAa,EAAEX,SAAS,CAAC6B;AAFR,C;AAuFrB,eAAe3B,aAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nclass ListBkResults extends Component {\n  static propTypes = {\n    bkResults: PropTypes.array.isRequired,\n    onUpdateShelf: PropTypes.func\n  }\n  state = {\n    query: ''\n  }\n\n  updateQuery = (query) => {\n    this.setState(() => ({\n      query: query.trim()\n    }))\n  }\n  clearQuery = () => {\n    this.updateQuery('')\n  }\n\n  render() {\n    const { query } = this.state\n    const { bkResults, onUpdateShelf } = this.props\n\n    const showingBooks = query === ''\n      ? bkResults\n      : bkResults.filter((b) => (\n        b.title.toLowerCase().includes(query.toLowerCase())\n      ))\n\n    return (\n      <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input placeholder=\"Search by title or author\"\n                  value={query}\n                  onChange={(event) => this.searchBook(event.target.value)}\n\n                  books={this.searchBook(query)}\n                  type=\"text\"\n                />\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <span>Results for [{this.state.query}]: {this.state.books.length} books.</span>\n              <Route exact path='/' render={() => (\n                <ListBkResults\n                  bkResults={this.state.books}\n                  onUpdateShelf={this.updateBook}\n                />\n              )} />\n            </div>\n          </div>\n\n\n/*\n      <ol className='books-grid'>\n        {this.props.bkResults.map((Books) => (\n          <li key={Books.id}>\n            <div className=\"book\">\n              <div className=\"book-top\">\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${Books.imageLinks.smallThumbnail})` }}></div>\n                <div className=\"book-shelf-changer\">\n                  <select value={Books.shelf} onChange={(event) => onUpdateShelf(Books, event.target.value)}>\n                    <option value=\"move\" disabled>Move to...</option>\n                    <option value=\"currentlyReading\" onClick={() => onUpdateShelf(Books, 'currentlyReading')}>Currently Reading</option>\n                    <option value=\"wantToRead\" onClick={() => onUpdateShelf(Books, 'wantToRead')}>Want to Read</option>\n                    <option value=\"read\" onClick={() => onUpdateShelf(Books, 'read')}>Read</option>\n                    <option value=\"none\">None</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"book-title\">{Books.title}</div>\n              <div className=\"book-authors\">{Books.authers}</div>\n            </div>\n          </li>\n        ))}\n      </ol>*/\n    )\n  }\n}\nexport default ListBkResults"]},"metadata":{},"sourceType":"module"}