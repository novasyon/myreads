{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Route } from 'react-router-dom';\nimport ListBooks from './ListBooks';\nimport './App.css';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false,\n      books: [],\n      bkread: [],\n      bkWantToRead: [],\n      bkReading: []\n    };\n\n    _this.removeBook = function (books) {\n      _this.setState(function (currentState) {\n        return {\n          books: currentState.books.filter(function (b) {\n            return b.id !== books.id;\n          })\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n\n    /* AddBook = (books) => {\n      BooksAPI.create(books)\n        .then((books) => {\n          this.setState((currentState) => ({\n            books: currentState.books.concat([books])\n          }))\n        })\n    }\n    */\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: _this3.state.books.filter(function (c) {\n              return c.shelf === \"currentlyReading\";\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: _this3.state.books.filter(function (c) {\n              return c.shelf === \"currentlyReading\";\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: _this3.state.books.filter(function (c) {\n              return c.shelf === \"wantToRead\";\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: _this3.state.books.filter(function (c) {\n              return c.shelf === \"read\";\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/App.js"],"names":["React","BooksAPI","Route","ListBooks","BooksApp","state","showSearchPage","books","bkread","bkWantToRead","bkReading","removeBook","setState","currentState","filter","b","id","getAll","then","c","shelf","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route } from 'react-router-dom'\nimport ListBooks from './ListBooks'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    books: [],\n    bkread: [],\n    bkWantToRead: [],\n    bkReading: []\n  }\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books\n        }))\n      })\n  }\n\n  removeBook = (books) => {\n    this.setState((currentState) => ({\n      books: currentState.books.filter((b) => {\n        return b.id !== books.id\n      })\n    }))\n  }\n  /* AddBook = (books) => {\n    BooksAPI.create(books)\n      .then((books) => {\n        this.setState((currentState) => ({\n          books: currentState.books.concat([books])\n        }))\n      })\n  }\n*/\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" placeholder=\"Search by title or author\" />\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n\n              <Route exact path='/' render={() => (\n                <ListBooks\n                  books={this.state.books.filter(((c) => {\n                            return c.shelf === \"currentlyReading\"\n                  }))}\n                />\n              )} />\n            </div>\n          </div>\n        ) : (\n            <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n              </div>\n              <div className=\"list-books-content\">\n                <div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                    <div className=\"bookshelf-books\">\n                      {//console.log('bkReading1', this.state.bkReading)\n                      }\n                      <Route exact path='/' render={() => (\n                        <ListBooks\n                          books={this.state.books.filter(((c) => {\n                            return c.shelf === \"currentlyReading\"\n                          }))}\n                        />\n                      )} />\n\n                    </div>\n                  </div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\n                    <div className=\"bookshelf-books\">\n                      <Route exact path='/' render={() => (\n                        <ListBooks\n                          books={this.state.books.filter(((c) => {\n                            return c.shelf === \"wantToRead\"\n                          }))}\n                        />\n                      )} />\n                    </div>\n                  </div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Read</h2>\n                    <div className=\"bookshelf-books\">\n                      <Route exact path='/' render={() => (\n                        <ListBooks\n                          books={this.state.books.filter(((c) => {\n                            return c.shelf === \"read\"\n                          }))}\n                        />\n                      )} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"open-search\">\n                <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n              </div>\n            </div>\n          )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}