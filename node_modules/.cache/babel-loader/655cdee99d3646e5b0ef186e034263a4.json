{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/App.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Route } from 'react-router-dom';\nimport ListBooks from './ListBooks';\nimport ListBkResults from './ListBkResults';\nimport './App.css';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksApp, _Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      query: '',\n      showSearchPage: false,\n      books: [],\n      bkResults: [],\n      showingBooks: [],\n      currentlyReading: [],\n      read: [],\n      wantToRead: []\n    };\n\n    _this.updateBookShelf = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (data) {\n        console.log(data);\n      });\n    };\n\n    _this.searchBook = function (query) {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState(function (books) {\n          return {};\n        });\n      });\n    };\n\n    _this.updateBook = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (books) {\n        _this.setState(function (currentState) {\n          return {\n            books: currentState.books.concat([books])\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books,\n            currentlyReading: books.filter(function (books) {\n              return books.shelf === 'currentlyReading';\n            }),\n            read: books.filter(function (books) {\n              return books.shelf === 'read';\n            }),\n            wantToRead: books.filter(function (books) {\n              return books.shelf === 'wantToRead';\n            })\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var query = this.state.query; // const { query, showingBooks , wantToRead, currentlyReading, read, Books}  = this.state;\n\n      var _this$props = this.props,\n          bkResults = _this$props.bkResults,\n          onAddBook = _this$props.onAddBook;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: _this3.state.books,\n            onChangeShelf: _this3.changeShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/search\",\n        render: function render() {\n          return React.createElement(ListBkResults, {\n            books: _this3.state.books,\n            onChangeShelf: _this3.changeShelf,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Add a book\")));\n    }\n  }]);\n\n  return BooksApp;\n}(Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/App.js"],"names":["React","Component","BooksAPI","Route","ListBooks","ListBkResults","BooksApp","state","query","showSearchPage","books","bkResults","showingBooks","currentlyReading","read","wantToRead","updateBookShelf","book","shelf","update","then","data","console","log","searchBook","getAll","setState","updateBook","currentState","concat","filter","props","onAddBook","changeShelf"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route } from 'react-router-dom'\nimport ListBooks from './ListBooks'\nimport ListBkResults from './ListBkResults'\nimport './App.css'\n\nclass BooksApp extends Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    query: '',\n    showSearchPage: false,\n    books: [],\n    bkResults: [],\n    showingBooks: [],\n    currentlyReading: [],\n    read: [],\n    wantToRead: [],\n  }\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books,\n          currentlyReading: books.filter(books => books.shelf === 'currentlyReading'),\n          read: books.filter(books => books.shelf === 'read'),\n          wantToRead: books.filter(books => books.shelf === 'wantToRead'),\n        }))\n      })\n  }\n  updateBookShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf).then((data) => {\n      console.log(data);\n    });\n  }\n\n\n  searchBook = (query) => {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState((books) => ({\n\n        }))\n      })\n  }\n\n  updateBook = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n      .then((books) => {\n        this.setState((currentState) => ({\n          books: currentState.books.concat([books])\n        }))\n      })\n  }\n\n  render() {\n    const { query } = this.state;\n    // const { query, showingBooks , wantToRead, currentlyReading, read, Books}  = this.state;\n\n    const { bkResults, onAddBook } = this.props\n\n    return (\n      <div className=\"app\">\n        <Route exact path='/' render={() => (\n          <ListBooks\n            books={this.state.books}\n            onChangeShelf={this.changeShelf}\n          />\n        )} />\n\n        <Route exact path='/search' render={() => (\n          <ListBkResults\n            books={this.state.books}\n            onChangeShelf={this.changeShelf}\n          />\n        )} />\n\n       \n        <div className=\"open-search\">\n          <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}