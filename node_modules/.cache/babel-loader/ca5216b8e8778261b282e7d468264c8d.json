{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/App.js\";\nimport React, { Component } from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Route } from 'react-router-dom';\nimport ListBooks from './ListBooks';\nimport ListBkResults from './ListBkResults';\nimport './App.css';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BooksApp, _Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      query: '',\n      showSearchPage: false,\n      books: [],\n      bkResults: [],\n      showingBooks: [],\n      currentlyReading: [],\n      read: [],\n      wantToRead: []\n    };\n\n    _this.updateBookShelf = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (data) {\n        console.log(data);\n      });\n    };\n\n    _this.searchBook = function (query) {\n      BooksAPI.getAll().then(function (books) {\n        _this.setState(function (books) {\n          return {};\n        });\n      });\n    };\n\n    _this.updateBook = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (books) {\n        _this.setState(function (currentState) {\n          return {\n            books: currentState.books.concat([books])\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function () {\n          return {\n            books: books,\n            currentlyReading: books.filter(function (books) {\n              return books.shelf === 'currentlyReading';\n            }),\n            read: books.filter(function (books) {\n              return books.shelf === 'read';\n            }),\n            wantToRead: books.filter(function (books) {\n              return books.shelf === 'wantToRead';\n            })\n          };\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          query = _this$state.query,\n          showingBooks = _this$state.showingBooks,\n          wantToRead = _this$state.wantToRead,\n          currentlyReading = _this$state.currentlyReading,\n          read = _this$state.read,\n          Books = _this$state.Books;\n      var _this$props = this.props,\n          bkResults = _this$props.bkResults,\n          onAddBook = _this$props.onAddBook;\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Search by title or author\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this3.searchBook(event.target.value);\n        },\n        books: this.searchBook(query),\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Results for [\", this.state.query, \"]: \", this.state.books.length, \" books.\"), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBkResults, {\n            bkResults: _this3.state.books,\n            onUpdateShelf: _this3.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            Books: _this3.state.currentlyReading,\n            onUpdateShelf: _this3.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            Books: _this3.state.wantToRead,\n            onUpdateShelf: _this3.updateBook,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            onUpdateShelf: _this3.updateBook,\n            Books: _this3.state.read,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Other\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            onUpdateShelf: _this3.updateBook,\n            books: _this3.state.books.filter(function (c) {\n              return c.shelf === \"none\";\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return BooksApp;\n}(Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/App.js"],"names":["React","Component","BooksAPI","Route","ListBooks","ListBkResults","BooksApp","state","query","showSearchPage","books","bkResults","showingBooks","currentlyReading","read","wantToRead","updateBookShelf","book","shelf","update","then","data","console","log","searchBook","getAll","setState","updateBook","currentState","concat","filter","Books","props","onAddBook","event","target","value","length","c"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route } from 'react-router-dom'\nimport ListBooks from './ListBooks'\nimport ListBkResults from './ListBkResults'\nimport './App.css'\n\nclass BooksApp extends Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    query: '',\n    showSearchPage: false,\n    books: [],\n    bkResults: [],\n    showingBooks: [],\n    currentlyReading: [],\n    read: [],\n    wantToRead: [],\n  }\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books,\n          currentlyReading: books.filter(books => books.shelf === 'currentlyReading'),\n          read: books.filter(books => books.shelf === 'read'),\n          wantToRead: books.filter(books => books.shelf === 'wantToRead'),\n        }))\n      })\n  }\n  updateBookShelf = (book, shelf) => {\n    BooksAPI.update(book, shelf).then((data) => {\n      console.log(data);\n    });\n  }\n\n\n  searchBook = (query) => {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState((books) => ({\n\n        }))\n      })\n  }\n\n  updateBook = (book, shelf) => {\n    BooksAPI.update(book, shelf)\n      .then((books) => {\n        this.setState((currentState) => ({\n          books: currentState.books.concat([books])\n        }))\n      })\n  }\n\n  render() {\n    const { query, showingBooks , wantToRead, currentlyReading, read, Books}  = this.state;\n\n    const { bkResults, onAddBook } = this.props\n\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input placeholder=\"Search by title or author\"\n                  value={query}\n                  onChange={(event) => this.searchBook(event.target.value)}\n\n                  books={this.searchBook(query)}\n                  type=\"text\"\n                />\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <span>Results for [{this.state.query}]: {this.state.books.length} books.</span>\n              <Route exact path='/' render={() => (\n                <ListBkResults\n                  bkResults={this.state.books}\n                  onUpdateShelf={this.updateBook}\n                />\n              )} />\n            </div>\n          </div>\n        ) : (\n            <div className=\"list-books\">\n              <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n              </div>\n              <div className=\"list-books-content\">\n                <div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                    <div className=\"bookshelf-books\">\n                      <Route exact path='/' render={() => (\n                        <ListBooks\n                        Books={this.state.currentlyReading}\n                          onUpdateShelf={this.updateBook}\n                        />\n                      )} />\n                    </div>\n                  </div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Want to Read</h2>\n                    <div className=\"bookshelf-books\">\n                      <Route exact path='/' render={() => (\n                        <ListBooks\n\n                        Books={this.state.wantToRead}\n                          onUpdateShelf={this.updateBook}\n\n                        />\n                      )} />\n                    </div>\n                  </div>\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Read</h2>\n                    <div className=\"bookshelf-books\">\n                      <Route exact path='/' render={() => (\n                        <ListBooks\n                          onUpdateShelf={this.updateBook}\n                          Books={this.state.read}\n                        />\n                      )} />\n                    </div>\n                  </div>\n\n                  <div className=\"bookshelf\">\n                    <h2 className=\"bookshelf-title\">Other</h2>\n                    <div className=\"bookshelf-books\">\n                      <Route exact path='/' render={() => (\n                        <ListBooks\n                          onUpdateShelf={this.updateBook}\n                          books={this.state.books.filter(((c) => {\n                            return c.shelf === \"none\"\n                          }))}\n\n                        />\n                      )} />\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n              <div className=\"open-search\">\n                <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n              </div>\n            </div>\n          )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}