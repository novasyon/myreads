{"ast":null,"code":"import _classCallCheck from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louis/apps/myreads/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/louis/apps/myreads/src/App.js\";\nimport React from 'react';\nimport * as BooksAPI from './BooksAPI';\nimport { Route } from 'react-router-dom';\nimport ListBooks from './ListBooks';\nimport './App.css';\n\nvar BooksApp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BooksApp, _React$Component);\n\n  function BooksApp() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BooksApp);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BooksApp)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      /**\n       * TODO: Instead of using this state variable to keep track of which page\n       * we're on, use the URL in the browser's address bar. This will ensure that\n       * users can use the browser's back and forward buttons to navigate between\n       * pages, as well as provide a good URL they can bookmark and share.\n       */\n      showSearchPage: false,\n      books: [],\n      bkread: [],\n      bkWantToRead: [],\n      bkReading: []\n    };\n    return _this;\n  }\n\n  _createClass(BooksApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (books) {\n        _this2.setState(function (currentState) {\n          return {\n            books: books,\n            bkread: currentState.books.filter(function (b) {\n              return b.shelf === \"read\";\n            }),\n            bkWantToRead: currentState.books.filter(function (b) {\n              return b.shelf === \"wantToRead\";\n            }),\n            bkReading: currentState.books.filter(function (b) {\n              return b.shelf === \"currentlyReading\";\n            })\n          };\n        });\n      });\n    }\n    /*removeContact = (books) => {\n      this.setState((currentState) => ({\n        contacts: currentState.books.filter((c) => {\n          return c.id !== books.id\n        })\n      }))\n       BooksAPI.remove(books)\n    }\n     AddBook = (books) => {\n      BooksAPI.create(books)\n        .then((books) => {\n          this.setState((currentState) => ({\n            contacts: currentState.contacts.concat([books])\n          }))\n        })\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.showSearchPage ? React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books: _this3.state.books,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"MyReads\")), console.log(this.state.books), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Currently Reading\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books1: _this3.state.books // books1={this.state.bkReading}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Want to Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books2: _this3.state.books //books2={this.state.bkWantToRead}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"bookshelf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"bookshelf-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Read\"), React.createElement(\"div\", {\n        className: \"bookshelf-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render() {\n          return React.createElement(ListBooks, {\n            books3: _this3.state.books //books3={this.state.bkread}\n            ,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this3.setState({\n            showSearchPage: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Add a book\"))));\n    }\n  }]);\n\n  return BooksApp;\n}(React.Component);\n\nexport default BooksApp;","map":{"version":3,"sources":["/Users/louis/apps/myreads/src/App.js"],"names":["React","BooksAPI","Route","ListBooks","BooksApp","state","showSearchPage","books","bkread","bkWantToRead","bkReading","getAll","then","setState","currentState","filter","b","shelf","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route } from 'react-router-dom'\nimport ListBooks from './ListBooks'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    books: [],\n    bkread: [],\n    bkWantToRead: [],\n    bkReading: []\n  }\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState((currentState) => ({\n          books,\n          bkread: currentState.books.filter((b) => {\n            return b.shelf === \"read\"\n          }),\n          bkWantToRead: currentState.books.filter((b) => {\n            return b.shelf === \"wantToRead\"\n          }),\n          bkReading: currentState.books.filter((b) => {\n            return b.shelf === \"currentlyReading\"\n          })\n\n        }))\n      })\n  }\n  /*removeContact = (books) => {\n    this.setState((currentState) => ({\n      contacts: currentState.books.filter((c) => {\n        return c.id !== books.id\n      })\n    }))\n\n    BooksAPI.remove(books)\n  }\n   AddBook = (books) => {\n    BooksAPI.create(books)\n      .then((books) => {\n        this.setState((currentState) => ({\n          contacts: currentState.contacts.concat([books])\n        }))\n      })\n  }*/\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\n                 \n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              \n         <Route exact path='/' render={() => (\n              <ListBooks\n             books={this.state.books}\n          />\n        )} />\n            </div>\n          </div>\n        ) : (\n          <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            {console.log(this.state.books)}\n            <div className=\"list-books-content\">\n              <div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <div className=\"bookshelf-books\">\n                  <Route exact path='/' render={() => (\n                        <ListBooks\n                      books1={this.state.books}\n                     // books1={this.state.bkReading}\n                    />\n                  )} />\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\n                  <div className=\"bookshelf-books\">\n                  <Route exact path='/' render={() => (\n                        <ListBooks\n                      books2={this.state.books}\n                      //books2={this.state.bkWantToRead}\n                    />\n                  )} />\n                  </div>\n                </div>\n                <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Read</h2>\n                  <div className=\"bookshelf-books\">\n                  <Route exact path='/' render={() => (\n                  <ListBooks\n                      books3={this.state.books}\n                      //books3={this.state.bkread}\n                    />\n                  )} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"open-search\">\n              <button onClick={() => this.setState({ showSearchPage: true })}>Add a book</button>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}