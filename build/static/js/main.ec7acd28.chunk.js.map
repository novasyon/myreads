{"version":3,"sources":["BooksAPI.js","Book.js","BookTableRow.js","BookTable.js","SearchBar.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","ListBkResults","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selectShelf","bookShelf","find","state","_this2","imageUrl","imageLinks","thumbnail","authors","join","title","react_default","a","createElement","className","style","width","height","backgroundImage","defaultValue","onChange","e","onChangeShelf","target","value","disabled","Component","BookTableRow","_this$props","booksForShelf","filter","shelfCategory","map","key","Book","BookTable","currentlyReading","wantToRead","read","src_BookTableRow","Link","to","SearchBar","updateQuery","setState","BooksAPI","constructor","Array","categorizedBooks","_this$state","type","placeholder","BooksApp","updateBook","response","_this3","changeShelf","Route","exact","path","render","src_SearchBar","src_BookTable","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ec7acd28.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nclass ListBkResults extends Component {\n  static propTypes = {\n    onChangeShelf: PropTypes.func.isRequired,\n    book: PropTypes.object.isRequired,\n    books: PropTypes.array.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      shelf: this.props.book.shelf\n    }\n  }\n\n  selectShelf = () => {\n    const bookShelf = this.props.books.find(book => book.id === this.props.book.id);\n\n    if (bookShelf)\n      return bookShelf.shelf;\n    else\n      return 'none'\n  }\n\n  render() {\n    const imageUrl = this.props.book.imageLinks && this.props.book.imageLinks.thumbnail\n    const authors = this.props.book.authors && this.props.book.authors.join()\n    const title = this.props.book.title\n\n    return (\n      <div>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${imageUrl})` }}></div>\n            <div className=\"book-shelf-changer\">\n              <select\n                defaultValue={this.selectShelf()}\n                onChange={e => this.props.onChangeShelf(this.props.book, e.target.value)}\n              >\n                <option value=\"move\" disabled>Move to...</option>\n                <option value=\"currentlyReading\">Currently Reading</option>\n                <option value=\"wantToRead\">Want to Read</option>\n                <option value=\"read\">Read</option>\n                <option value=\"none\">None</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"book-title\">{title}</div>\n          <div className=\"book-authors\">{authors}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ListBkResults","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Book from './Book'\n\nclass BookTableRow extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    onChangeShelf: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { title, books, onChangeShelf } = this.props\n    const booksForShelf = books.filter((book) => book.shelf === this.props.shelfCategory)\n\n    return (\n      <div>\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{title}</h2>\n          <div className=\"bookshelf-books\">\n            <ol className='books-grid'>\n              {booksForShelf.map((book) => (\n                <li key={book.id}>\n                  <Book\n                    onChangeShelf={onChangeShelf}\n                    book={book}\n                    books={books}\n                  />\n                </li>\n              ))}\n            </ol>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookTableRow","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport BookTableRow from './BookTableRow'\nimport {Link} from 'react-router-dom'\n//import Route from 'react-router-dom'\n\nclass BookTable extends Component {\n  static propTypes = {\n    books: PropTypes.array.isRequired,\n    onChangeShelf: PropTypes.func.isRequired\n  }\n  render() {\n    const { books, onChangeShelf } = this.props\n    const currentlyReading = books.filter((book) => book.shelf === 'currentlyReading')\n    const wantToRead = books.filter((book) => book.shelf === 'wantToRead')\n    const read = books.filter((book) => book.shelf === 'read')\n\n    return (\n      <div>\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <div className=\"list-books-content\">\n            <BookTableRow\n              key=\"currentlyReadingShelf\"\n              shelfCategory=\"currentlyReading\"\n              title=\"Currently Reading\"\n              books={currentlyReading}\n              onChangeShelf={onChangeShelf}\n            />\n\n            <BookTableRow\n              key=\"wantToReadShelf\"\n              shelfCategory=\"wantToRead\"\n              title=\"Want to Read\"\n              books={wantToRead}\n              onChangeShelf={onChangeShelf}\n            />\n\n            <BookTableRow\n              key=\"readShelf\"\n              shelfCategory=\"read\"\n              title=\"Read\"\n              books={read}\n              onChangeShelf={onChangeShelf}\n            />\n          </div>\n          <div className=\"open-search\">\n          <Link to='/search'><button></button></Link>\n        </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BookTable","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport Book from './Book'\nimport PropTypes from 'prop-types'\n\nclass SearchBar extends Component {\nstatic propTypes = {\n  onChangeShelf: PropTypes.func.isRequired,\n  categorizedBooks: PropTypes.array.isRequired\n}\n\n  state = {\n    query: '',\n    books: []\n  }\n\n  updateQuery = (query) => {\n    this.setState({query})\n\n    if(query) {\n      BooksAPI.search(query).then((books) => {\n        if(books.constructor === Array) {\n          this.setState({ books: books })\n        }\n        else {\n          this.setState({ books: [] })\n        }\n      })\n    }\n    else {\n      this.setState({ books: [] })\n    }\n  }\n\n  render() {\n    const { onChangeShelf, categorizedBooks } = this.props\n    const { query, books } = this.state\n\n    return (\n      <div>\n\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link to='/' className='close-search'>Close</Link>\n\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title or author\"\n                value={query}\n                onChange={(e) => this.updateQuery(e.target.value)}\n              />\n            </div>\n          </div>\n\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\">\n              {books.map((book) => (\n                <li key={book.id}>\n                  <Book\n                    onChangeShelf={onChangeShelf}\n                    book={book}\n                    books={categorizedBooks}\n                  />\n                </li>\n              ))}\n            </ol>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar","\nimport React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport BookTable from './BookTable'\nimport SearchBar from './SearchBar'\nimport { Route } from 'react-router-dom'\nimport './App.css'\n\nclass BooksApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      books: [],\n      currentlyReading: [],\n      read: [],\n      wantToRead: [],\n    }\n  }\n\n  componentDidMount() {\n    BooksAPI.getAll()\n      .then((books) => {\n        this.setState(() => ({\n          books\n        }))\n      })\n  }\n\n  updateBook = (book, shelf) => {\n    BooksAPI.update(book, shelf).then((response) => {\n      BooksAPI.getAll().then((books) => {\n        this.setState({ books })\n      })\n    })\n  }\n\n  render() {\n    const changeShelf = this.updateBook\n\n    return (\n      <div className=\"app\">\n        <Route exact path='/search' render={() => (\n          <SearchBar\n            onChangeShelf={changeShelf}\n            categorizedBooks={this.state.books}\n          />\n        )} />\n\n        <Route exact path='/' render={() => (\n          <BookTable\n            books={this.state.books}\n            onChangeShelf={changeShelf}\n          />\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default BooksApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}